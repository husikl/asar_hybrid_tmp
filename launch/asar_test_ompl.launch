<launch>

    <group ns ="/unit0">

        <param name="loop_rate" value="50"/>
        <param name = "unit_id" value="0"/>

        <include file="$(find asar_control)/launch/asar_control_main.launch">
            <arg name="asar_cyclic_time_usec" value="1000"/>
            <!-- <arg name="ik_solver" value="codcs_tp"/> -->
            <arg name="ik_solver" value="codcs_nlo"/>
            <!-- <arg name="error_method" value="only_p"/> -->
            <arg name="error_method" value="log3"/>
            <!-- <arg name="error_method" value="log6"/> -->
            <arg name="group_name" value="/unit0"/>
            <arg name="constrained_control" value="true"/>
            <!-- If constrained control = true -->
            <arg name="trocar_x" value="0.4205"/>
            <arg name="trocar_y" value="0.250"/>
            <arg name="trocar_z" value="0.201"/>
            <!-- Cost Coeff mu0: Position error  -->
            <arg name="mu0" value="2.0"/>
            <!-- Cost Coeff mu1: Orientation error  -->
            <arg name="mu1" value="0.5"/>
            <!-- Cost Coeff mu2: Joint distance  -->
            <arg name="mu2" value="0.001"/>
            <!-- Cost Coeff mu3: RCM error  -->
            <arg name="mu3" value="100.0"/>
        </include>

        

    </group>
    <!-- ompl planner -->
    <node pkg="asar_hybrid_tmp" name="ompl_planner" type="ompl_planner.py" output="screen" />
    <!-- flc based collision checker -->
    <node pkg="asar_hybrid_tmp" name="collision_checker" type="collision_checker.py" output="screen"></node>
    
    <!-- helper node for handling suture points and publishing them to the simulator -->
    <node pkg="asar_hybrid_tmp" name="suture_points_handler_node" type="suture_points_handler.py" output="screen"></node>
    

</launch>
